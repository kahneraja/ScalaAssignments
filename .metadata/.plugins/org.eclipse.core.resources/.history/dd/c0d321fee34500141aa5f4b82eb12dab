object Research {
  def factorial(x: Int): Int =
    if (x == 0) 1 else x * factorial(x - 1)       //> factorial: (x: Int)Int
  
  def fTailProduct(x: Int, next: Int): Int =
  	x * fTail(next)                           //> fTailProduct: (x: Int, next: Int)Int
  
  def fTail(x: Int): Int =
    if (x == 0) 1 else fTailProduct(x, x - 1)     //> fTail: (x: Int)Int

  factorial(5)                                    //> res0: Int = 120
  factorial(1)                                    //> res1: Int = 1
  factorial(2)                                    //> res2: Int = 2
  factorial(3)                                    //> res3: Int = 6
  
  
  
  def balance(chars: List[Char]): Boolean = true  //> balance: (chars: List[Char])Boolean
  
  val s = List('a', '(', 'c', ')', 'e')           //> s  : List[Char] = List(a, (, c, ), e)
  balance(s)                                      //> res4: Boolean = true
}